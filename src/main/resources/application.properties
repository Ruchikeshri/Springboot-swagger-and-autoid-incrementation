#log4j.rootLogger = DEBUG,console
#log4j.appender.console=org.apache.log4j.ConsoleAppender
#log4j.appender.console.layout=org.apache.log4j.PatternLayout
#log4j.appender.console.layout.ConversionPattern=%d{dd-MMM-YYYY hh:mm:ss z} [%t] -5p %c %M - %m %n


#spring.data.mongodb.database=blogDB1
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
##spring.data.mongodb.host=hostIpOnWhichMongoIsRunning
#spring.data.mongodb/uri=mongodb
#spring.data.mongodb.repositories.enabled=true
#spring.datasource.driver-class-name= mongodb.jdbc.MongoDriver
#spring.datasource.url=jdbc:mongodb://mongodb/user?createDatabaseIfNotExist=true&user=root&password=root&useSSL=true
#spring.main.allow-bean-definition-overriding=true
#spring.mvc.pathmatch.matching-strategy=ant-path-matcher
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
##
##spring.data.message1="BlogAlreadyExistsException"
##spring.data.message2="BlogNotFoundException"
#data.exception.message1 = Blog Already Exists
#data.exception.message2 = Blog Not Found


logging.level.org.springframework.web=DEBUG
logging.level.com.example.myproj=DEBUG
server.port=8086
spring.application.name=blog-service
eureka.instance.instance-id=${spring.application.name}:${random.uuid}
spring.data.mongodb.database=blogDB2
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb/uri=mongodb
eureka.instance.hostname=localhost
spring.data.mongodb.repositories.enabled=true
spring.datasource.driver-class-name= mongodb.jdbc.MongoDriver
spring.datasource.url=jdbc:mongodb://mongodb/user?createDatabaseIfNotExist=true&user=root&password=root&useSSL=true
spring.main.allow-bean-definition-overriding=true
spring.mvc.pathmatch.matching-strategy=ant-path-matcher
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
data.exception.message1 = Blog Already Exists
data.exception.message2 = Blog Not Found